type Order {
  items: [Item] @relation
  customerEmail: String
  customerName: String
  customerPhoneNo: String
  collection: CollectionSlot
  status: OrderStatus
}

type User {
  userName: String! @unique
  userRole: UserRole!
}

input CreateUserInput {
  userName: String
  password: String
  role: UserRole!
}

input LoginUserInput {
  userName: String!
  password: String!
}

enum UserRole {
  PATRON
  SHOP_ADMIN
}

type Item {
  sku: String
  name: String
  order: Order @relation
  quantity: Int
  price: Int
}

type CollectionSlot {
  date: String
  order: Order
}

enum OrderStatus {
  UNFULFILLED
  ORDERED
  CANCELLED
  PARTIALLYCOMPLETE
  COMPLETE
}

type Query {
  allOrders: [Order]
  allItems: [Item]
  allCollectionSlots: [CollectionSlot]
}

type Mutation {
  createUser(input: CreateUserInput): User! @resolver(name: "create_user")
  loginUser(input: LoginUserInput): String! @resolver(name: "login_user")
}
